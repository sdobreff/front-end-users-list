
map $http_host $blogid {
    default 0;
}

# Check if client is capable of handling webp
map $http_accept $webp_suffix {
       default "";
       "~*webp" ".webp";
}

# Capture image path, without the file extension
map $uri $image {
        ~*^/?(wp-content)/(.+)\.(png|jpe?g)$ $1/$2;
}

server {
    listen 80;
    listen [::]:80;

        client_max_body_size 200M;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
 
        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;
        try_files $uri $uri/ /index.php?q=$uri&$args;

        #server_name *;
        location ~ ^(/[^/]+/)?files/(.+) {
                try_files /wp-content/blogs.dir/$blogid/files/$2 /wp-includes/ms-files.php?file=$2 ;
                access_log off;     log_not_found off; expires max;
        }

        if (!-e $request_filename) {
                rewrite /wp-admin$ $scheme://$host$request_uri/ permanent;
                rewrite ^(/[^/]+)?(/wp-.*) $2 last;
                rewrite ^(/[^/]+)?(/.*\.php) $2 last;
        }


        location / {
                if (!-e $request_filename) {
                        rewrite ^.*$ /index.php last;
                }
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ /index.php?q=$uri&$args =404;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.1-fpm.sock;
        #       fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        #       fastcgi_pass unix:/run/php/php8.0-fpm.sock;
               fastcgi_pass unix:/run/php/php8.1-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }

        location ~* ^/?wp-content/.*\.(png|jpe?g)$ {
                add_header Vary Accept;
                if ($http_accept !~* "webp"){
                       break;
                }
 #               #add_header X-debug-message $image$webp_suffix always;
                try_files /$image$webp_suffix $uri  =404;
        }


        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
                deny all;
        }
}

# server {
#     listen 80;
#     listen [::]:80;

#     #server_name *;
#     #return 302 https://$server_name$request_uri;
#     #rewrite ^(.*) $host$1 permanent;
#     return 301 https://$host$request_uri;

#         client_max_body_size 200M;
#         proxy_connect_timeout 600;
#         proxy_send_timeout 600;
#         proxy_read_timeout 600;
#         send_timeout 600;
#         # SSL configuration
#         #
#         # listen 443 ssl default_server;
#         # listen [::]:443 ssl default_server;
#         #
#         # Note: You should disable gzip for SSL traffic.
#         # See: https://bugs.debian.org/773332
#         #
#         # Read up on ssl_ciphers to ensure a secure configuration.
#         # See: https://bugs.debian.org/765782
#         #
#         # Self signed certs generated by the ssl-cert package
#         # Don't use them in a production server!
#         #
#         # include snippets/snakeoil.conf;

#         root /var/www/html;

#         # Add index.php to the list if you are using PHP
#         index index.php index.html index.htm index.nginx-debian.html;
#         try_files $uri $uri/ /index.php?q=$uri&$args;

#         location / {
#                 if (!-e $request_filename) {
#                         rewrite ^.*$ /index.php last;
#                 }
#                 # First attempt to serve request as file, then
#                 # as directory, then fall back to displaying a 404.
#                 try_files $uri $uri/ /index.php?q=$uri&$args =404;
#         }

#         # pass PHP scripts to FastCGI server
#         #
#         location ~ \.php$ {
#                 include snippets/fastcgi-php.conf;
#         #
#         #       # With php-fpm (or other unix sockets):
#                 fastcgi_pass unix:/run/php/php7.4-fpm.sock;
#         #       # With php-cgi (or other tcp sockets):
#         #       fastcgi_pass 127.0.0.1:9000;
#         }

#         location ~* ^/?wp-content/.*\.(png|jpe?g)$ {
#                 #add_header Vary Accept;
#                 #expires 365d;
#                 #if ($http_accept !~* "webp"){
#                 #       break;
#                 #}
#                 try_files
#                         $request_filename.webp
#                         #$uri 
#                         =404;
#         }

#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         location ~ /\.ht {
#                 deny all;
#         }
#     #return 302 https://$server_name$request_uri;
# }
